/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        tabesc: tab_escape_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_ESCAPE_GRAVE";
            #binding-cells = <0>;
            bindings = <&gresc>, <&kp TAB>;

            mods = <(MOD_LALT|MOD_RALT|MOD_LSFT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };

        shiftlayer: shift_layer {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_SHIFT>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        l2l4: layer2_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER2_LAYER4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&mo 4>;
        };

        l6l4: layer6_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER6_LAYER4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 6>, <&mo 4>;
        };

        lmt: long_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_MOD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        lmo: long_mod_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "long_mod_layer";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 6>, <&mo 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            bindings = <
                &kp LEFT_GUI    &kp Q    &kp W    &kp E    &kp R    &kp T        &kp Y    &kp U    &kp I    &kp O   &kp P  &kp BACKSLASH
                &mt LALT CAPS   &kp A    &kp S    &kp D    &kp F    &kp G        &kp H    &kp J    &kp K    &kp L   &kp SEMICOLON &kp QUOTE
                &kp LEFT_SHIFT  &kp Z    &kp X    &kp C    &kp V    &kp B        &kp N    &kp M    &kp COMMA &kp DOT &kp SLASH &kp RIGHT_SHIFT
                &mt LCTRL ESC   &lt Layer_1 TAB  &kp SPACE &kp BACKSPACE &lt Layer_2 ENTER &lt Layer_3 DELETE
            >;
        };

        Layer_1 {
            bindings = <
                &kp LEFT_GUI &kp F1 &kp F2 &kp F3 &kp F4 &kp NUM_LOCK &kp KP_PLUS &kp KP_7 &kp KP_8 &kp KP_9 &kp KP_0 &kp KP_SLASH
                &kp LALT     &kp F5 &kp F6 &kp F7 &kp F8 &kp ENTER    &kp KP_MINUS &kp KP_4 &kp KP_5 &kp KP_6 &kp KP_ASTERISK &kp KP_PERCENT
                &kp LEFT_SHIFT &kp F9 &kp F10 &kp F11 &kp F12 &kp DELETE &kp KP_EQUAL &kp KP_1 &kp KP_2 &kp KP_3 &kp KP_CIRCUMFLEX &kp KP_ENTER
                &mt LCTRL ESC   &trans  &kp SPACE &kp BACKSPACE &lt Layer_2 KP_0 &kp KP_DOT
            >;
        };

        Layer_2 {
            bindings = <
                &kp GRAVE &kp EXCLAMATION &kp AMPERSAND &kp PIPE &kp LEFT_PAREN &kp RIGHT_PAREN &kp PLUS &kp 7 &kp 8 &kp 9 &kp 0 &kp DOT
                &kp TILDE &kp AT &kp ASTERISK &kp PERCENT &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp MINUS &kp 4 &kp 5 &kp 6 &trans &trans
                &kp UNDERSCORE &kp HASH &kp CIRCUMFLEX &kp DOLLAR &kp LEFT_CURLY_BRACE &kp RIGHT_CURLY_BRACE &kp EQUAL &kp 1 &kp 2 &kp 3 &trans &trans
                &kp LESS_THAN &kp GREATER_THAN &kp SPACE &kp BACKSPACE &trans &kp DELETE
            >;
        };

        TLayer_3 {
            bindings = <
                &kp LEFT_GUI &trans &kp WH_LEFT &kp MOUSE_UP &kp WH_RIGHT &kp WH_UP &kp HOME &kp BTN1 &kp UP_ARROW &kp BTN2 &kp PG_UP &kp WH_UP
                &kp LALT     &trans &kp MOUSE_LEFT &kp MOUSE_DOWN &kp MOUSE_RIGHT &kp WH_DOWN &kp END &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp PG_DOWN &kp WH_DOWN
                &kp LEFT_SHIFT &kp LCTRL &trans &trans &trans &kp PAUSE &kp INSERT &kp BTN4 &kp BTN3 &kp BTN5 &trans &trans
                &mt LCTRL ESC &kp TAB &kp SPACE &trans &trans &trans
            >;
        };
    };
};
