/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        tabesc: tab_escape_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_ESCAPE_GRAVE";
            #binding-cells = <0>;
            bindings = <&gresc>, <&kp TAB>;

            mods = <(MOD_LALT|MOD_RALT|MOD_LSFT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };

        shiftlayer: shift_layer {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_SHIFT>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        l2l4: layer2_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER2_LAYER4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&mo 4>;
        };

        l6l4: layer6_layer4 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER6_LAYER4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 6>, <&mo 4>;
        };

        lmt: long_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_MOD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        lmo: long_mod_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "long_mod_layer";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 6>, <&mo 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Layer_0 {
            bindings = <
&kp LEFT_GUI    &kp Q  &kp W  &kp E          &kp R      &kp T        &kp Y          &kp U        &kp I         &kp O    &kp P          &kp BACKSLASH
&mt LALT CAPS   &kp A  &kp S  &kp D          &kp F      &kp G        &kp H          &kp J        &kp K         &kp L    &kp SEMICOLON  &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C          &kp V      &kp B        &kp N          &kp M        &kp COMMA     &kp DOT  &kp SLASH      &kp RIGHT_SHIFT
                              &mt LCTRL ESC  &lt 1 TAB  &kp SPACE    &kp BACKSPACE  &lt 2 ENTER  &lt 3 DELETE
            >;
        };

        Layer_1 {
            bindings = <
&kp LEFT_GUI    &kp F1  &kp F2   &kp F3         &kp F4   &kp KP_NUM    &kp KP_PLUS    &kp KP_N7    &kp KP_N8   &kp KP_N9  &kp KP_N0        &kp KP_SLASH
&kp LALT        &kp F5  &kp F6   &kp F7         &kp F8   &kp ENTER     &kp KP_MINUS   &kp KP_N4    &kp KP_N5   &kp KP_N6  &kp KP_ASTERISK  &kp PERCENT
&kp LEFT_SHIFT  &kp F9  &kp F10  &kp F11        &kp F12  &kp DELETE    &kp KP_EQUAL   &kp KP_N1    &kp KP_N2   &kp KP_N3  &kp CARET        &kp KP_ENTER
                                 &mt LCTRL ESC  &trans   &kp SPACE     &kp BACKSPACE  &lt 2 KP_N0  &kp KP_DOT
            >;
        };

        Layer_2 {
            bindings = <
&kp GRAVE       &kp EXCLAMATION  &kp AMPERSAND  &kp PIPE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp PLUS       &kp N7        &kp N8        &kp N9        &kp N0  &kp DOT
&kp TILDE       &kp AT           &kp ASTERISK   &kp PERCENT    &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp MINUS      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&kp UNDERSCORE  &kp HASH         &kp CARET      &kp DOLLAR     &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp EQUAL      &kp N1        &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                                &kp LESS_THAN  &kp GREATER_THAN      &kp SPACE                &kp BACKSPACE  &trans        &kp DELETE
            >;
        };

        TLayer_3 {
            bindings = <
                &kp LEFT_GUI    &trans     &trans   &trans    &trans    &trans          &kp HOME    &trans          &kp UP_ARROW    &trans          &kp PG_UP      &trans
                &kp LALT        &trans     &trans   &trans    &trans    &trans          &kp END     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW &kp PAGE_DOWN  &trans
                &kp LEFT_SHIFT  &kp LCTRL  &trans   &trans    &trans    &kp C_PP        &kp INSERT  &trans          &trans          &trans          &trans         &trans
                                            &mt LCTRL ESC    &kp TAB    &kp SPACE       &trans      &trans          &trans
            >;
        };
    };
};
